const router = require("express").Router()

const { signUpController, loginController, updateAdminPasswordController } = require('../../controllers/adminController/authControllers')
const { forgotPasswordAdminCodeController, validateCodeAdminController, forgotAdminPasswordController } = require("../../controllers/adminController/adminForgotPasswordController")
const { getAnalyticsController , getUserStatAnalyticsController, getSpecialistStatController, getBookingAnalyticsController, getUserActivityController, getYearlyUserActivityController} = require("../../controllers/adminController/analyticsController")
const { getReportedPostsController, deleteReportedPostController } = require("../../controllers/adminController/reportedPostsController")
const { createTagController, getTagByParamController, updateTagController, deleteTagByParamController } = require("../../controllers/adminController/tagsController")
const { createBadgeController, getBadgeByParamController, updateBadgeController, deleteBadgeByParamController } = require("../../controllers/adminController/badgeController")
const { getWithdrawalsController, updateWithdrawalsController, deleteWithdrawalsController } = require("../../controllers/adminController/withdrawalController")
const { deletePostByParamController } = require('../../controllers/centralController/postController')
const { createCaregiverBookingController, updateBookingEventController, deleteBookingEventController } = require("../../controllers/caregiverController/caregiverBookingController")
const { getBookingRequestController, searchBookingRequestByNameController, getRequestByStatusController, searchBookingRequestByRoleController } = require("../../controllers/adminController/bookingRequestController")
const { createSubscrptionController, getSubscriptionController, updateSubscriptionController, deleteSubscriptionController } = require("../../controllers/adminController/subscriptionController")
const { createVaccineController, getVaccineController, updateVaccineController, deleteVaccineController} = require("../../controllers/adminController/vaccineController")
const { getCaregiversListController, updateCaregiverStatusController, searchCaregiverController, deleteCaregiverController, createBookingController } = require("../../controllers/adminController/caregiverController")
const { getDoctorsListController, getDoctorsByParamController, updateDoctorStatusController, deleteDoctorController, searchDoctorController } = require("../../controllers/adminController/doctorController")
const { getChildrenByParamController, searchChildrenController, deleteChildrenController } = require("../../controllers/adminController/childrenController")
const { adminVerifier, tokenVerifier, secondLevelVerifier } = require("../../utils")
const { searchWithdrawalByNameController } = require("../../controllers/adminController/withdrawalController")

//route here
router.post('/register', signUpController)
router.post('/login', loginController)
router.put('/reset-password/:adminId', updateAdminPasswordController)

router.post("/code-input", forgotPasswordAdminCodeController )
router.post("/verify-code", validateCodeAdminController )
router.put("/admin/forgot-password/:adminId", forgotAdminPasswordController )

router.get('/analytics', tokenVerifier,  getAnalyticsController)
router.get('/booking-analytics', tokenVerifier,  getBookingAnalyticsController)
router.get('/user-stat',tokenVerifier,  getUserStatAnalyticsController)
router.get('/specialist-stat',tokenVerifier,  getSpecialistStatController)
router.get("/user-activity", tokenVerifier, getUserActivityController)
router.get("/user-annual-activity", tokenVerifier, getYearlyUserActivityController)
router.get('/posts', tokenVerifier, getReportedPostsController)
router.delete('/posts/:postId', tokenVerifier, deleteReportedPostController)
router.delete("/post/:doctorId/:postId",tokenVerifier,  deletePostByParamController)

router.get('/withdrawals', tokenVerifier,  getWithdrawalsController)
router.put('/withdrawals/:withdrawalId',tokenVerifier,  updateWithdrawalsController)
router.delete("/withdrawals/:withdrawalId",tokenVerifier,  deleteWithdrawalsController)
router.get("/search-withdrawal/search", tokenVerifier, searchWithdrawalByNameController)

router.post('/tags', tokenVerifier, createTagController)
router.get('/tags', tokenVerifier, getTagByParamController)
router.put('/tags/:tagId', tokenVerifier, updateTagController)
router.delete("/tags/:tagId",tokenVerifier,  deleteTagByParamController)

router.post('/badges',tokenVerifier,  createBadgeController)
router.get('/badges',tokenVerifier,  getBadgeByParamController)
router.put('/badges/:badgeId',tokenVerifier,  updateBadgeController)
router.delete("/badges/:badgeId", tokenVerifier,  deleteBadgeByParamController)

router.post("/create-booking/:caregiverId", tokenVerifier,  createCaregiverBookingController) 
router.get("/bookings", tokenVerifier,  getBookingRequestController)
router.put("/bookings/:bookingId", tokenVerifier,  updateBookingEventController)
router.delete("/bookings/:caregiverId", tokenVerifier,  deleteBookingEventController)
router.get("/search-request/search", tokenVerifier, searchBookingRequestByNameController)
router.get("/status-request", tokenVerifier, getRequestByStatusController)
router.get("/role-request/search", tokenVerifier, searchBookingRequestByRoleController)

router.post("/create-subscription", tokenVerifier,  createSubscrptionController) 
router.get("/subscription", tokenVerifier,  getSubscriptionController)
router.put("/subscription/:subscriptionId", tokenVerifier,  updateSubscriptionController)
router.delete("/subscription/:subscriptionId", tokenVerifier,  deleteSubscriptionController)

router.post("/create-vaccine", tokenVerifier,  createVaccineController) 
router.get("/vaccine", tokenVerifier,  getVaccineController)
router.put("/vaccine/:vaccineId", tokenVerifier,  updateVaccineController)
router.delete("/vaccine/:vaccineId", tokenVerifier,  deleteVaccineController)
router.get("/caregivers", tokenVerifier,  getCaregiversListController)
router.put("/caregivers/:caregiverId", tokenVerifier,  updateCaregiverStatusController)
router.get("/caregivers/search", tokenVerifier,  searchCaregiverController)
router.delete("/caregivers/:caregiverId", tokenVerifier,  deleteCaregiverController)

router.get("/registered-doctors",  tokenVerifier,  getDoctorsListController)
router.get("/doctors",  tokenVerifier,  getDoctorsByParamController)
router.put("/doctors/:doctorId",  tokenVerifier,  updateDoctorStatusController)
router.get("/doctors/search",  tokenVerifier,  searchDoctorController)
router.delete("/doctors/:doctorId",  tokenVerifier,  deleteDoctorController)

router.get("/children", tokenVerifier,  getChildrenByParamController)
router.get("/children/search", tokenVerifier,  searchChildrenController)
router.delete("/children/:childrenId", tokenVerifier,  deleteChildrenController)

router.post("/create-bookings", tokenVerifier, createBookingController )

module.exports = router